// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: internal.proto
// Protobuf C++ Version: 6.30.0

#ifndef internal_2eproto_2epb_2eh
#define internal_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_internal_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_internal_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_internal_2eproto;
}  // extern "C"
namespace krpc {
class InputProto;
struct InputProtoDefaultTypeInternal;
extern InputProtoDefaultTypeInternal _InputProto_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull InputProto_class_data_;
class OutputProto;
struct OutputProtoDefaultTypeInternal;
extern OutputProtoDefaultTypeInternal _OutputProto_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull OutputProto_class_data_;
}  // namespace krpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace krpc {

// ===================================================================


// -------------------------------------------------------------------

class OutputProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:krpc.OutputProto) */ {
 public:
  inline OutputProto() : OutputProto(nullptr) {}
  ~OutputProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OutputProto* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OutputProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OutputProto(::google::protobuf::internal::ConstantInitialized);

  inline OutputProto(const OutputProto& from) : OutputProto(nullptr, from) {}
  inline OutputProto(OutputProto&& from) noexcept
      : OutputProto(nullptr, std::move(from)) {}
  inline OutputProto& operator=(const OutputProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline OutputProto& operator=(OutputProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OutputProto& default_instance() {
    return *reinterpret_cast<const OutputProto*>(
        &_OutputProto_default_instance_);
  }
  enum DataCase {
    kMsg = 2,
    kUtf8 = 3,
    DATA_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OutputProto& a, OutputProto& b) { a.Swap(&b); }
  inline void Swap(OutputProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OutputProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OutputProto* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OutputProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OutputProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OutputProto& from) { OutputProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OutputProto* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "krpc.OutputProto"; }

 protected:
  explicit OutputProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  OutputProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const OutputProto& from);
  OutputProto(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, OutputProto&& from) noexcept
      : OutputProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeFieldNumber = 1,
    kMsgFieldNumber = 2,
    kUtf8FieldNumber = 3,
  };
  // int32 code = 1;
  void clear_code() ;
  ::int32_t code() const;
  void set_code(::int32_t value);

  private:
  ::int32_t _internal_code() const;
  void _internal_set_code(::int32_t value);

  public:
  // string msg = 2;
  bool has_msg() const;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_msg();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_msg();
  void set_allocated_msg(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_msg() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_msg(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_msg();

  public:
  // string utf8 = 3;
  bool has_utf8() const;
  void clear_utf8() ;
  const std::string& utf8() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_utf8(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_utf8();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_utf8();
  void set_allocated_utf8(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_utf8() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_utf8(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_utf8();

  public:
  void clear_data();
  DataCase data_case() const;
  // @@protoc_insertion_point(class_scope:krpc.OutputProto)
 private:
  class _Internal;
  void set_has_msg();
  void set_has_utf8();
  inline bool has_data() const;
  inline void clear_has_data();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 3,
                                   0, 32,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const OutputProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t code_;
    union DataUnion {
      constexpr DataUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr msg_;
      ::google::protobuf::internal::ArenaStringPtr utf8_;
    } data_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_internal_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull OutputProto_class_data_;
// -------------------------------------------------------------------

class InputProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:krpc.InputProto) */ {
 public:
  inline InputProto() : InputProto(nullptr) {}
  ~InputProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InputProto* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InputProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InputProto(::google::protobuf::internal::ConstantInitialized);

  inline InputProto(const InputProto& from) : InputProto(nullptr, from) {}
  inline InputProto(InputProto&& from) noexcept
      : InputProto(nullptr, std::move(from)) {}
  inline InputProto& operator=(const InputProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputProto& operator=(InputProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InputProto& default_instance() {
    return *reinterpret_cast<const InputProto*>(
        &_InputProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(InputProto& a, InputProto& b) { a.Swap(&b); }
  inline void Swap(InputProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InputProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InputProto* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InputProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InputProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InputProto& from) { InputProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InputProto* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "krpc.InputProto"; }

 protected:
  explicit InputProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  InputProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const InputProto& from);
  InputProto(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, InputProto&& from) noexcept
      : InputProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUtf8FieldNumber = 2,
  };
  // string utf8 = 2;
  void clear_utf8() ;
  const std::string& utf8() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_utf8(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_utf8();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_utf8();
  void set_allocated_utf8(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_utf8() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_utf8(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_utf8();

  public:
  // @@protoc_insertion_point(class_scope:krpc.InputProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 28,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const InputProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr utf8_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_internal_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull InputProto_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// InputProto

// string utf8 = 2;
inline void InputProto::clear_utf8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.utf8_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InputProto::utf8() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:krpc.InputProto.utf8)
  return _internal_utf8();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void InputProto::set_utf8(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.utf8_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:krpc.InputProto.utf8)
}
inline std::string* PROTOBUF_NONNULL InputProto::mutable_utf8()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_utf8();
  // @@protoc_insertion_point(field_mutable:krpc.InputProto.utf8)
  return _s;
}
inline const std::string& InputProto::_internal_utf8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.utf8_.Get();
}
inline void InputProto::_internal_set_utf8(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.utf8_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL InputProto::_internal_mutable_utf8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.utf8_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE InputProto::release_utf8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:krpc.InputProto.utf8)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.utf8_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.utf8_.Set("", GetArena());
  }
  return released;
}
inline void InputProto::set_allocated_utf8(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.utf8_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.utf8_.IsDefault()) {
    _impl_.utf8_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:krpc.InputProto.utf8)
}

// -------------------------------------------------------------------

// OutputProto

// int32 code = 1;
inline void OutputProto::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t OutputProto::code() const {
  // @@protoc_insertion_point(field_get:krpc.OutputProto.code)
  return _internal_code();
}
inline void OutputProto::set_code(::int32_t value) {
  _internal_set_code(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:krpc.OutputProto.code)
}
inline ::int32_t OutputProto::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline void OutputProto::_internal_set_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string msg = 2;
inline bool OutputProto::has_msg() const {
  return data_case() == kMsg;
}
inline void OutputProto::set_has_msg() {
  _impl_._oneof_case_[0] = kMsg;
}
inline void OutputProto::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() == kMsg) {
    _impl_.data_.msg_.Destroy();
    clear_has_data();
  }
}
inline const std::string& OutputProto::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:krpc.OutputProto.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void OutputProto::set_msg(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() != kMsg) {
    clear_data();

    set_has_msg();
    _impl_.data_.msg_.InitDefault();
  }
  _impl_.data_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:krpc.OutputProto.msg)
}
inline std::string* PROTOBUF_NONNULL OutputProto::mutable_msg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:krpc.OutputProto.msg)
  return _s;
}
inline const std::string& OutputProto::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (data_case() != kMsg) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.data_.msg_.Get();
}
inline void OutputProto::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() != kMsg) {
    clear_data();

    set_has_msg();
    _impl_.data_.msg_.InitDefault();
  }
  _impl_.data_.msg_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL OutputProto::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() != kMsg) {
    clear_data();

    set_has_msg();
    _impl_.data_.msg_.InitDefault();
  }
  return _impl_.data_.msg_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE OutputProto::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:krpc.OutputProto.msg)
  if (data_case() != kMsg) {
    return nullptr;
  }
  clear_has_data();
  return _impl_.data_.msg_.Release();
}
inline void OutputProto::set_allocated_msg(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_data()) {
    clear_data();
  }
  if (value != nullptr) {
    set_has_msg();
    _impl_.data_.msg_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:krpc.OutputProto.msg)
}

// string utf8 = 3;
inline bool OutputProto::has_utf8() const {
  return data_case() == kUtf8;
}
inline void OutputProto::set_has_utf8() {
  _impl_._oneof_case_[0] = kUtf8;
}
inline void OutputProto::clear_utf8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() == kUtf8) {
    _impl_.data_.utf8_.Destroy();
    clear_has_data();
  }
}
inline const std::string& OutputProto::utf8() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:krpc.OutputProto.utf8)
  return _internal_utf8();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void OutputProto::set_utf8(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() != kUtf8) {
    clear_data();

    set_has_utf8();
    _impl_.data_.utf8_.InitDefault();
  }
  _impl_.data_.utf8_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:krpc.OutputProto.utf8)
}
inline std::string* PROTOBUF_NONNULL OutputProto::mutable_utf8()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_utf8();
  // @@protoc_insertion_point(field_mutable:krpc.OutputProto.utf8)
  return _s;
}
inline const std::string& OutputProto::_internal_utf8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (data_case() != kUtf8) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.data_.utf8_.Get();
}
inline void OutputProto::_internal_set_utf8(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() != kUtf8) {
    clear_data();

    set_has_utf8();
    _impl_.data_.utf8_.InitDefault();
  }
  _impl_.data_.utf8_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL OutputProto::_internal_mutable_utf8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() != kUtf8) {
    clear_data();

    set_has_utf8();
    _impl_.data_.utf8_.InitDefault();
  }
  return _impl_.data_.utf8_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE OutputProto::release_utf8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:krpc.OutputProto.utf8)
  if (data_case() != kUtf8) {
    return nullptr;
  }
  clear_has_data();
  return _impl_.data_.utf8_.Release();
}
inline void OutputProto::set_allocated_utf8(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_data()) {
    clear_data();
  }
  if (value != nullptr) {
    set_has_utf8();
    _impl_.data_.utf8_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:krpc.OutputProto.utf8)
}

inline bool OutputProto::has_data() const {
  return data_case() != DATA_NOT_SET;
}
inline void OutputProto::clear_has_data() {
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}
inline OutputProto::DataCase OutputProto::data_case() const {
  return OutputProto::DataCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace krpc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // internal_2eproto_2epb_2eh
